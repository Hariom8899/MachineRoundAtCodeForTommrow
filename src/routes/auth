const express = require('express');
const bcrypt = require('bcrypt');
const User = require('../models/user');
const jwt = require('jsonwebtoken');
const { validateSingUpData } = require('../utils/validation');
const nodemailer = require("nodemailer");


const authRouter = express.Router();

authRouter.post('/signUp', async (req, res) => {
  try{
    validateSingUpData(req);
    const {firstName, lastName, email, password } = req.body;
    const hashPassword = await bcrypt.hash(password, 10);
    const user = new User({
        firstName,
        lastName,
        email,
        password:hashPassword,
    })

    await user.save();
    res.send('SignUp Success');
  }
  catch(err){
    res.status(400).send('Erro Occured in Signup ' + err.message);
  }
})

authRouter.post('/login', async (req, res) => {
   try{
    const { email, password } = req.body;
    const user = await User.findOne({email:email});
    if(!user){
        throw new Error('Please Login No Such Email Exists');
    }
    const hash = user.password;
    const isPasswordCorrect = await bcrypt.compare(password, hash );
    if(isPasswordCorrect){

    const token = await jwt.sign({_id:user._id}, "secretKey", {expiresIn: "1d"});
    res.cookie("token", token);
    res.send('Login Success');
    }
    else{
        throw new Error('Incorrect Password');
    }

  }
  catch(err){
    res.status(400).send('Error Occured in Login ' + err.message);
  }
})

authRouter.patch('/forgetPassword', async (req, res) => {
    try{

        const { email, password } = req.body;
        const user = await User.findOne({email:email});
        if(!user){
            throw new Error('No Such User Exists');
        }
        const transporter = nodemailer.createTransport({
            host: "smtp.ethereal.email",
            port: 587,
            secure: false, 
            auth: {
              email: email,
              pass: password,
            },
        });

        const info = await transporter.sendMail({
            from: '"Server" <Server@gmail.com>', 
            to: email, 
            subject: "Reset Password", 
            text: "Change Your Password", 
          });
        
        console.log("Message sent: %s", info.messageId);
        const hashPassword = await bcrypt.hash(password, 10);
        user.password = hashPassword;
        await user.save();
        res.send('Password Updated Successfully');
    }
    catch(err){
        console.log(err);
        res.status(400).send('Error Occured in forgetPassword' + err.message);
    }
})

authRouter.get('/', async (req, res) => {
    try{
        const {firstName, lastName, email } = req.user;
        res.json({
            "firstName":firstName,
            "lastName":lastName,
            "email":email,
        });
    }
    catch(err){
        res.status(400).send('Error Occured in getting user ' + err.message);
    }
})

module.exports = authRouter;